# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger: none

  
pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  websiteName: 'Default Web Site'
  Password: $(WebsiteAuthUserPassword)
 

parameters:
- name: EnableIIS
  displayName: "Enable IIS"
  type: string
  values:
    - true
    - false

- name: IISDeploymentType
  displayName: Configuration type
  type: string
  default: 'IISWebsite'
  values: 
    - 'IISWebsite'
    - 'IISWebApplication'
    - 'IISVirtualDirectory'
    - 'IISApplicationPool'

- name: ActionIISWebsite
  displayName: Action
  type: string
  default: CreateOrUpdateWebsite
  values: 
    - CreateOrUpdateWebsite
    - StartWebsite
    - StopWebsite

- name: WebsiteName
  displayName: WebSite Name
  type: string
  default: Default Web Site
  
- name: WebsitePhysicalPath
  displayName: Physical path
  type: string
  default: '%SystemDrive%\inetpub\wwwroot'
 
- name: WebsiteAuthUserName
  displayName: WebsiteAuthUserName
  type: string 
  default: iisadmin
  
# - name: Password
#   displayName: Password
#   # type: string
#   default: $(WebsiteAuthUserPassword) 

- name: Package
  displayName: IIS Deploy Package
  type: string
  default: 'C:\azagent\*\_work\1\drop\*.zip'

stages:
- stage: 'Build'
  displayName: 'Build'
  jobs:
     - job:
       steps:
        - task: NuGetToolInstaller@1
        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'
        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
- stage: 'Run_Unit_tests'
  dependsOn: 'Build'
  jobs: 
  - job: Test
    steps:
      - task: VSTest@2
        inputs:
          testSelector: 'testAssemblies'
          testAssemblyVer2: |
            **\*test*.dll
            !**\*TestAdapter.dll
            !**\obj\**
          searchFolder: '$(System.DefaultWorkingDirectory)'

- stage: 'Dev'
  displayName: 'Dev'
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  # variables:
  # - group: IIServer
  #- name: password
   # value: $[WebsiteAuthUserPassword]
  jobs:
   
   - deployment: Dev
     displayName: Dev
     environment: 
       name: 'Dev'    
       resourceType: VirtualMachine
       resourceName: IISWebServer
     strategy:
      runOnce:
        deploy:
          steps: 
          - template: ./template/IISWebAppDeployment_template.yml
            parameters:
              EnableIIS: '${{Parameters.EnableIIS}}'
              IISDeploymentType: '${{Parameters.IISDeploymentType}}'
              ActionIISWebsite: '${{Parameters.ActionIISWebsite}}'
              WebsiteName: '${{Parameters.WebsiteName}}'
              WebsitePhysicalPath: '${{Parameters.WebsitePhysicalPath}}'
              WebsiteAuthUserName: '${{Parameters.WebsiteAuthUserName}}'
              # WebsiteAuthUserPassword: '${{Parameters.WebsiteAuthUserPassword}}'
              #WebsiteAuthUserPassword: $(Password)
              Package: '${{Parameters.Package}}'

