# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  websiteName: 'Default Web Site'

parameters:
- name: EnableIIS
  displayName: Enable IIS
  type: boolean
  default: true
  
- name: IISDeploymentType
  displayName: Configuration type
  type: string
  default: IIS Website
  values: 
    - IIS Website
    - IIS Web Application
    - IIS Virtual Directory
    - IIS Application Pool

- name: ActionIISWebsite
  displayName: Action
  type: string
  default: Create Or Update
  values: 
    - Create Or Update
    - Start
    - Stop

- name: WebsiteName
  displayName: WebSite Name
  type: string
  default: Default Web Site
  
- name: WebsitePhysicalPath
  displayName: Physical path
  type: string
  default: '%SystemDrive%\inetpub\wwwroot'
 
- name: WebsiteAuthUserName
  displayName: WebsiteAuthUserName
  type: string 
  default: iisadmin
  
- name: WebsiteAuthUserPassword
  displayName: WebsiteAuthUserPassword
  type: string

- name: Package
  displayName: IIS Deploy Package
  type: string
  default: 'C:\azagent\*\_work\1\drop\*.zip'

stages:
- stage: 'Build'
  displayName: 'Build'
  jobs:
     - job:
       steps:
        - task: NuGetToolInstaller@1

        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'

        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'

        - task: VSTest@2
          inputs:
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'

        # - task: PublishPipelineArtifact@1
        #   inputs:
        #     targetPath: '$(Pipeline.Workspace)'
        #     publishLocation: 'pipeline'
        # - task: CopyFiles@2
        #   inputs:
        #     Contents: '**'
        #     TargetFolder: '$(Build.ArtifactStagingDirectory)'
        # - task: ArchiveFiles@2
        #   inputs:
        #     rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/application'
        #     includeRootFolder: false
        #     archiveType: 'zip'
        #     archiveFile: '$(Build.ArtifactStagingDirectory)/app/application.zip'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'


- stage: 'Dev'
  displayName: 'Dev'
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
   - deployment: Dev
     displayName: Dev
     environment: 
       name: 'Dev'    
       resourceType: VirtualMachine
       resourceName: IISWebServer
     variables:
     - name: websitePhysicalPath
       value: '%SystemDrive%\inetpub\wwwroot'

     strategy:
      runOnce:
        deploy:
          steps: 
          - template: ./template/IISWebAppDeployment_template.yml
            parameters:
              EnableIIS: '$(Parameters.EnableIIS)'
              IISDeploymentType: '$(Parameters.IISDeploymentType)'
              ActionIISWebsite: '$(Parameters.ActionIISWebsite)'
              WebsiteName: '$(Parameters.WebsiteName)'
              WebsitePhysicalPath: '$(Parameters.WebsitePhysicalPath)'
              WebsiteAuthUserName: '$(Parameters.WebsiteAuthUserName)'
              WebsiteAuthUserPassword: '$(Parameters.WebsiteAuthUserPassword)'
              Package: '$(Parameters.Package)'

          # - task: IISWebAppManagementOnMachineGroup@0
          #   inputs:
          #     EnableIIS: true
          #     IISDeploymentType: 'IISWebsite'
          #     ActionIISWebsite: 'CreateOrUpdateWebsite'
          #     WebsiteName: 'Default Web Site'
          #     WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot'
          #     WebsitePhysicalPathAuth: 'WebsiteWindowsAuth'
          #     WebsiteAuthUserName: 'iisadmin'
          #     WebsiteAuthUserPassword: 'IISadmin@123'
          #     AddBinding: true
          #     Bindings: |
          #         {
          #             bindings:[
          #                 {
          #                     "protocol":"http",
          #                     "ipAddress":"",
          #                     "hostname":"",
          #                     "port":"80",
          #                     "sslThumbprint":"",
          #                     "sniFlag":false
          #                 }
          #             ]
          #         }
          #     # CreateOrUpdateAppPoolForWebsite: true
          #     # ConfigureAuthenticationForWebsite: true
          #     # AppPoolNameForWebsite: 'test'
          #     # DotNetVersionForWebsite: 'v4.0'
          #     # PipeLineModeForWebsite: 'Integrated'
          #     # AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
          # - task: IISWebAppDeploymentOnMachineGroup@0
          #   inputs:
          #     WebSiteName: 'Default Web Site'
          #     Package: 'C:\azagent\A10\_work\1\drop\*.zip'
