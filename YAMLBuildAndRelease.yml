# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger: none

pool: 
  vmImage: windows-latest
  # name: Default
  # demands:
  #   - agent.name -equals IISWebServer
  #   - Agent.Version -equals 2.206.1
  #   - MSBuild
  #   - VisualStudio
  #   - VSTest

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  # websiteName: 'EICadmin_hexa'
  Password: $(WebsiteAuthUserPassword)

parameters:
- name: EnableIIS
  displayName: "Enable IIS"
  type: string
  default: true
  values:
    - true
    - false

- name: IISDeploymentType
  displayName: Configuration type
  type: string
  default: 'IISWebsite'
  values: 
    - 'IISWebsite'
    - 'IISWebApplication'
    - 'IISVirtualDirectory'
    - 'IISApplicationPool'

- name: ActionIISWebsite
  displayName: Action
  type: string
  default: CreateOrUpdateWebsite
  values: 
    - CreateOrUpdateWebsite
    - StartWebsite
    - StopWebsite

- name: WebsiteName
  displayName: WebSite Name
  type: string
  default: EICadmin_hexa
  
- name: DotNetVersionForWebsite
  displayName: DotNetVersionForWebsite
  type: string
  default: v4.0
  # values: 
  #   - v4.0
  #   - v2.0

# - name: WebsitePhysicalPath
#   displayName: Physical path
#   type: string
#   default: '%SystemDrive%\inetpub\wwwroot\${{Parameters.WebsiteName}}'
 
- name: WebsiteAuthUserName
  displayName: WebsiteAuthUserName
  type: string 
  default: iisadmin
  
# - name: Password
#   displayName: Password
#   # type: string
#   default: $(WebsiteAuthUserPassword) 

- name: Package
  displayName: IIS Deploy Package
  type: string
  default: 'C:\azagent\*\_work\1\drop\*.zip'

stages:
- stage: 'Build'
  displayName: 'Build'
  jobs:
     - job:
       steps:
        - task: NuGetToolInstaller@1
        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'
        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
        - task: VSTest@2
          inputs:
            testSelector: 'testAssemblies'
            testAssemblyVer2: |
              **\*test*.dll
              !**\*TestAdapter.dll
              !**\obj\**
            searchFolder: '$(System.DefaultWorkingDirectory)'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

# - stage: 'Run_Unit_tests'
#   displayName: 'Run_Unit_tests'
#   dependsOn: 'Build'
#   jobs: 
#   - job: Test
#     steps:
#       - task: VSTest@2
#         inputs:
#           testSelector: 'testAssemblies'
#           testAssemblyVer2: |
#             **\*test*.dll
#             !**\*TestAdapter.dll
#             !**\obj\**
#           searchFolder: '$(System.DefaultWorkingDirectory)'

# - stage: 'Deploy_In_Dev'
#   displayName: 'Deploy_In_Dev'
#   dependsOn: 'Build'
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#   jobs:  
#    - deployment: Dev
#      displayName: Dev
#      pool: 
#       name: Default
#       demands:
#       - agent.name -equals IISWebServer
#      environment: 
#        name: 'Dev'    
#        resourceType: VirtualMachine
#        resourceName: IISWebServer
#      strategy:
#       runOnce:
#         deploy:
#           steps: 
#           - template: ./template/IISWebAppDeployment_template.yml
#             parameters:
#               EnableIIS: '${{Parameters.EnableIIS}}'
#               IISDeploymentType: '${{Parameters.IISDeploymentType}}'
#               ActionIISWebsite: '${{Parameters.ActionIISWebsite}}'
#               WebsiteName: '${{Parameters.WebsiteName}}'
#               WebsitePhysicalPath: '${{Parameters.WebsitePhysicalPath}}'
#               WebsiteAuthUserName: '${{Parameters.WebsiteAuthUserName}}'
#               Package: '${{Parameters.Package}}'

- stage: 'Deploy_In_QA'
  displayName: 'Deploy_In_QA'
  dependsOn: 'Build'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:  
   - deployment: QA
     displayName: QA
     environment: 
      name: 'QA'
      resourceType: VirtualMachine
      resourceName: IISWebServerQA
     strategy:
      runOnce:
        deploy:
          steps: 
          - template: ./template/IISWebAppDeployment_template.yml
            parameters:
              EnableIIS: '${{Parameters.EnableIIS}}'
              IISDeploymentType: '${{Parameters.IISDeploymentType}}'
              ActionIISWebsite: '${{Parameters.ActionIISWebsite}}'
              WebsiteName: '${{Parameters.WebsiteName}}'
              DotNetVersionForWebsite: '${{Parameters.DotNetVersionForWebsite}}'
              # WebsitePhysicalPath: '${{Parameters.WebsitePhysicalPath}}'
              WebsiteAuthUserName: '${{Parameters.WebsiteAuthUserName}}'
              Package: '${{Parameters.Package}}'